<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Personel_to_unit extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        if(!$this->session->userdata('id'))
        {
         redirect('login');
        }
        $this->load->model('Personel_to_unit_model');
    }

    /*
     * Listing of personel_to_unit
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE;
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('personel_to_unit/index?');
        $config['total_rows'] = $this->Personel_to_unit_model->get_all_personel_to_unit_count();
        $this->pagination->initialize($config);

        $data['personel_to_unit'] = $this->Personel_to_unit_model->get_all_personel_to_unit($params);
        $data['rank'] = $this->Personel_to_unit_model->get_all_rank();
        $data['_view'] = 'personel_to_unit/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new personel_to_unit
     */
    function add($year='2564')
    {
        if(!isset($year)){$year='2563';}
        $this->load->library('form_validation');

		$this->form_validation->set_rules('year','Year','numeric|greater_than[2560]');
		$this->form_validation->set_rules('position_no','Position No','numeric|max_length[4]');

		if($this->form_validation->run())
        {
            $params = array(
				'unit_id' => $this->input->post('unit_id'),
				'rank_id' => $this->input->post('rank_id'),
				'personel_id' => $this->input->post('personel_id'),
				'year' => $this->input->post('year'),
				'position_no' => $this->input->post('position_no'),
				'position' => $this->input->post('position'),
            );

            $personel_to_unit_id = $this->Personel_to_unit_model->add_personel_to_unit($params);
            redirect('personel_to_unit/index');
        }
        else
        {
			$this->load->model('Unit_model');
			$data['all_units'] = $this->Unit_model->get_all_units();

			$this->load->model('Rank_model');
			$data['all_rank'] = $this->Rank_model->get_all_rank();

			$this->load->model('Personel_to_unit_model');
			$data['free_personels'] = $this->Personel_to_unit_model->get_free_personels($year);

            $data['_view'] = 'personel_to_unit/add';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Editing a personel_to_unit
     */
    function get_personel_by_unit($unit_id,$year)
    {
        if(isset($unit_id))
        {
            $params['limit'] = RECORDS_PER_PAGE;
            $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

            $config = $this->config->item('pagination');
            //$config['base_url'] = site_url('personel_to_unit/index?');
            $config['total_rows'] = $this->Personel_to_unit_model->get_all_personel_by_unit_count($unit_id);
            $this->pagination->initialize($config);

            $data['personel_to_unit'] = $this->Personel_to_unit_model->get_all_personel_by_unit($unit_id,$year,$params);


            $data['rank'] = $this->Personel_to_unit_model->get_all_rank();

            if($config['total_rows']>0){

                $data['_view'] = 'personel_to_unit/selectunit';
                $this->load->view('layouts/main',$data);
            }
            else{
                $_SESSION['message']='ไม่พบข้อมูลค่ะ';
                //echo "<script type='text/javascript'>alert('$message');</script>";
                //$data['_view'] = 'unit/index';
                //$this->load->view('layouts/main');
                redirect('unit/index');
            }
        }
        else
            show_error('The personel_to_unit you are trying to edit does not exist.');
    }

    /*
     * Editing a personel_to_unit
     */
    function edit($id)
    {
        // check if the personel_to_unit exists before trying to edit it
        $data['personel_to_unit'] = $this->Personel_to_unit_model->get_personel_to_unit($id);

        if(isset($data['personel_to_unit']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('year','Year','numeric|greater_than[2560]');
			$this->form_validation->set_rules('position_no','Position No','numeric|max_length[4]');

			if($this->form_validation->run())
            {
                $params = array(
					'unit_id' => $this->input->post('unit_id'),
					'rank_id' => $this->input->post('rank_id'),
					'personel_id' => $this->input->post('personel_id'),
					'year' => $this->input->post('year'),
					'position_no' => $this->input->post('position_no'),
					'position' => $this->input->post('position'),
                );

                $this->Personel_to_unit_model->update_personel_to_unit($id,$params);
                redirect('personel_to_unit/index');
            }
            else
            {
				$this->load->model('Unit_model');
				$data['all_units'] = $this->Unit_model->get_all_units();

				$this->load->model('Rank_model');
				$data['all_rank'] = $this->Rank_model->get_all_rank();

				$this->load->model('Personel_model');
				$data['all_personels'] = $this->Personel_model->get_all_personels();

                $data['_view'] = 'personel_to_unit/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The personel_to_unit you are trying to edit does not exist.');
    }

    /*
     * Deleting personel_to_unit
     */
    function remove($id)
    {
        $personel_to_unit = $this->Personel_to_unit_model->get_personel_to_unit($id);

        // check if the personel_to_unit exists before trying to delete it
        if(isset($personel_to_unit['id']))
        {
            $this->Personel_to_unit_model->delete_personel_to_unit($id);
            redirect('personel_to_unit/index');
        }
        else
        echo $id;
            show_error('The personel_to_unit you are trying to delete does not exist.');
    }

}
